import pandas as pd
from transformers import MarianMTModel, MarianTokenizer
from langdetect import detect

# Load datasets
amazon_df = pd.read_csv(rREMOVED_SECRETC:\Users\65988\Desktop\Folders\EE6405C22\NLP\dataset\Amazon_en_to_es.csvREMOVED_SECRET)
shopee_df = pd.read_csv(rREMOVED_SECRETC:\Users\65988\Desktop\Folders\EE6405C22\NLP\dataset\Shopee_CN_to_EN.csvREMOVED_SECRET)
italian_df = pd.read_csv(rREMOVED_SECRETC:\Users\65988\Desktop\Folders\EE6405C22\NLP\dataset\target_en_to_it.csvREMOVED_SECRET)

# Define translation models
models = {
    REMOVED_SECRETen‚ÜízhREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-en-zhREMOVED_SECRET,
    REMOVED_SECRETzh‚ÜíenREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-zh-enREMOVED_SECRET,
    REMOVED_SECRETen‚ÜíitREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-en-itREMOVED_SECRET,
    REMOVED_SECRETit‚ÜíenREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-it-enREMOVED_SECRET,
    REMOVED_SECRETen‚ÜífrREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-en-frREMOVED_SECRET,
    REMOVED_SECRETes‚ÜíenREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-es-enREMOVED_SECRET,
    REMOVED_SECRETen‚ÜíesREMOVED_SECRET: REMOVED_SECRETHelsinki-NLP/opus-mt-en-esREMOVED_SECRET
}

# Load translation pipelines
translation_pipelines = {}
for key, model_name in models.items():
    tokenizer = MarianTokenizer.from_pretrained(model_name)
    model = MarianMTModel.from_pretrained(model_name)
    translation_pipelines[key] = (tokenizer, model)

# Translation function
def translate(text, direction):
    tokenizer, model = translation_pipelines[direction]
    inputs = tokenizer(text, return_tensors=REMOVED_SECRETptREMOVED_SECRET, padding=True)
    outputs = model.generate(**inputs)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

# User input
user_input = input(REMOVED_SECRETEnter your product search query: REMOVED_SECRET)
detected_lang = detect(user_input)
print(fREMOVED_SECRETüîç Detected language: {detected_lang}REMOVED_SECRET)

# Step 1: Translate input to English if needed
if detected_lang == REMOVED_SECRETzhREMOVED_SECRET:
    search_query_en = translate(user_input, REMOVED_SECRETzh‚ÜíenREMOVED_SECRET)
elif detected_lang == REMOVED_SECRETitREMOVED_SECRET:
    search_query_en = translate(user_input, REMOVED_SECRETit‚ÜíenREMOVED_SECRET)
elif detected_lang == REMOVED_SECRETesREMOVED_SECRET:
    search_query_en = translate(user_input, REMOVED_SECRETes‚ÜíenREMOVED_SECRET)
else:
    search_query_en = user_input  # Already in English

print(fREMOVED_SECRETüîé Searching for: {search_query_en}REMOVED_SECRET)

# Step 2: Search all datasets
def search_dataset(df, column):
    return df[df[column].str.contains(search_query_en, case=False, na=False)]

results = []
results.append(search_dataset(amazon_df, REMOVED_SECRETtitleREMOVED_SECRET))       # English column
results.append(search_dataset(shopee_df, REMOVED_SECRETenREMOVED_SECRET))          # Translated column
results.append(search_dataset(italian_df, REMOVED_SECRETtitleREMOVED_SECRET))      # English column

# Combine results
combined = pd.concat(results)
print(REMOVED_SECRET‚úÖ Search Results:REMOVED_SECRET)
print(combined.head())

# Step 3: Translate result titles back to user's language
if detected_lang != REMOVED_SECRETenREMOVED_SECRET:
    translated_titles = [translate(title, fREMOVED_SECRETen‚Üí{detected_lang}REMOVED_SECRET) for title in combined[REMOVED_SECRETtitleREMOVED_SECRET].head()]
    print(REMOVED_SECRET\nüåç Translated Results:REMOVED_SECRET)
    for original, translated in zip(combined[REMOVED_SECRETtitleREMOVED_SECRET].head(), translated_titles):
        print(fREMOVED_SECRET- {original} ‚Üí {translated}REMOVED_SECRET)
